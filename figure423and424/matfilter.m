function y = matfilter(x)
%MATFILTER Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 8.1 and the Signal Processing Toolbox 6.19.
% Generated on: 31-Oct-2019 15:53:48

%#codegen

% To generate C/C++ code from this function use the codegen command.
% Type 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    %
    % Fstop1 = 0.01;  % First Stopband Frequency
    % Fpass1 = 0.1;   % First Passband Frequency
    % Fpass2 = 30;    % Second Passband Frequency
    % Fstop2 = 100;   % Second Stopband Frequency
    % Astop1 = 60;    % First Stopband Attenuation (dB)
    % Apass  = 1;     % Passband Ripple (dB)
    % Astop2 = 80;    % Second Stopband Attenuation (dB)
    % Fs     = 200;   % Sampling Frequency
    %
    % h = fdesign.bandpass('fst1,fp1,fp2,fst2,ast1,ap,ast2', Fstop1, Fpass1, ...
    %                      Fpass2, Fstop2, Astop1, Apass, Astop2, Fs);
    %
    % Hd = design(h, 'butter', ...
    %     'MatchExactly', 'passband', ...
    %     'SystemObject', true);
    
    Hd = dsp.BiquadFilter( ...
        'Structure', 'Direct form II', ...
        'SOSMatrix', [1 0 -1 1 -0.778180296690482 0.57770085694686; 1 0 -1 1 ...
        -1.9983029149215 0.998310458685768; 1 0 -1 1 -1.99555193356329 ...
        0.995559506784236; 1 0 -1 1 -0.582045299796245 0.175302832665253; 1 0 -1 ...
        1 -1.26301602613282 0.265039384005979], ...
        'ScaleValues', [0.446036337123144; 0.446036337123144; ...
        0.384966831313764; 0.384966831313764; 0.36748030799701; 1]);
end

y = step(Hd,x);


